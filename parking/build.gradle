plugins {
	id 'org.springframework.boot' version '2.4.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
	id "com.github.node-gradle.node" version "3.0.1"
	id "org.gretty" version "3.0.3"
}

group = 'com.veebzone'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	jcenter()
	mavenCentral()
}

processResources {
	dependsOn 'copyFrontendToBuild'
}

task copyFrontendToBuild(type: Copy) {
	dependsOn 'npmBuild'
	from "$projectDir/src/main/frontend/dist"
	into "$buildDir/resources/main/static"
}

task npmBuild(type: NpmTask) {
	args = ['run', 'build']
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'org.modelmapper.extensions:modelmapper-spring:2.3.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	runtimeOnly 'org.hsqldb:hsqldb'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

war {
  enabled=true
}

node {
	nodeProjectDir = file("${project.projectDir}/src/main/frontend")
}

gretty {
	contextPath=""
}